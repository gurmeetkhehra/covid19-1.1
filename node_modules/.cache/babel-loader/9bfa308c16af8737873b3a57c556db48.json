{"ast":null,"code":"var _jsxFileName = \"/Users/jasminekhehra/Desktop/showmywork/covid-19/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchAPI();\n  }, []);\n  const linechart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0 , 0 , 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }) : null;\n  console.log(confirmed, recovered, deaths);\n  const barchar = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: 'total',\n        data: [confirmed.value, recovered.value, deaths.value],\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        hoverBackgroundColor: ['rgba(0,0,255,0.7)', 'rgba(0, 255, 0, 0.722)', 'rgba(255, 0, 0, 0.752)']\n      }]\n    } // data={{\n    //     lables: ['Infected', 'Recovered', 'Deaths'],\n    //     datasets: [{\n    //         label: 'people',\n    //         backgroundColor: [\n    //             'rgba(0,0,255,0.5)',\n    //             'rgba(0, 255, 0, 0.664)',\n    //             'rgba(255, 0, 0, 0.692)'\n    //         ],\n    //         data: [confirmed.value, recovered.value, deaths.value],\n    //     }]\n    // }}\n    // options={{\n    //     legend: {display: false},\n    //     title: {display: true, text: `Current state in ${country}`}\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, country ? barchar : linechart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/jasminekhehra/Desktop/showmywork/covid-19/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","linechart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barchar","value","hoverBackgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAyB,iBAAzB;AAGC,OAAOC,MAAP,MAAmB,oBAAnB;;AAED,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAN;AAAsCC,EAAAA;AAAtC,CAAD,KAAoD;AAC9D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,EAAC,MAAMX,cAAc,EAArB,EAAZ;AACH,KAFD;;AAIAY,IAAAA,QAAQ;AACX,GANQ,EAMP,EANO,CAAT;AAQA,QAAMC,SAAS,GACbH,SAAS,CAACI,MAAV,gBAEC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACTC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADC;AAEPC,MAAAA,QAAQ,EAAE,CAAC;AACTb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAgBA,SAA9B,CADG;AAETa,QAAAA,KAAK,EAAE,UAFE;AAGTC,QAAAA,WAAW,EAAE,SAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACEhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACR,UAAAA;AAAD,SAAD,KAAaA,MAA3B,CADR;AAEEW,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEE,QAAAA,eAAe,EAAE,wBAJnB;AAKED,QAAAA,IAAI,EAAE;AALR,OALO;AAFH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,GAkBI,IAnBN;AAsBAE,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ,EAAuBC,SAAvB,EAAkCC,MAAlC;AACA,QAAMiB,OAAO,GACTnB,SAAS,gBACL,oBAAC,GAAD;AAEA,IAAA,IAAI,EAAE;AACFS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAE,CACN;AACAC,QAAAA,KAAK,EAAE,OADP;AAEAd,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACoB,KAAX,EAAkBnB,SAAS,CAACmB,KAA5B,EAAmClB,MAAM,CAACkB,KAA1C,CAFN;AAGAJ,QAAAA,eAAe,EAAE,CAAE,mBAAF,EAAuB,sBAAvB,EAA+C,sBAA/C,CAHjB;AAIAK,QAAAA,oBAAoB,EAAE,CAAC,mBAAD,EAAsB,wBAAtB,EAAgD,wBAAhD;AAJtB,OADM;AAFR,KAFN,CAaI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAiCN,IAlCP;AAqCA,sBACI;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,OAAO,GAAEgB,OAAF,GAAYZ,SADxB,CADJ;AAOH,CA9ED;;AAgFA,eAAeT,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar } from 'react-chartjs-2';\n\n\n import styles from './Chart.module.css';\n \nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n       \n        fetchAPI();\n    },[]);\n\n    const linechart = (\n      dailyData.length?\n\n      (<Line data={{\n          labels: dailyData.map(({date}) => date),\n            datasets: [{\n              data: dailyData.map(({confirmed})=> confirmed),\n              label: 'Infected',\n              borderColor: '#3333ff',\n              fill: true\n             },{\n                 data: dailyData.map(({deaths})=> deaths),\n                 label: 'Deaths',\n                 borderColor: 'red',\n                 backgroundColor: 'rgba(255, 0 , 0 , 0.5)',\n                 fill: true\n\n            }]\n      }}  \n    />) : null\n    );\n\n    console.log(confirmed, recovered, deaths);\n    const barchar = (\n        confirmed \n        ? ( <Bar   \n\n            data={{\n                labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n                datasets: [\n                    {\n                    label: 'total',\n                    data: [confirmed.value, recovered.value, deaths.value],\n                    backgroundColor: [ 'rgba(0,0,255,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                    hoverBackgroundColor: ['rgba(0,0,255,0.7)', 'rgba(0, 255, 0, 0.722)', 'rgba(255, 0, 0, 0.752)']\n                    }\n                ]\n            }}\n                // data={{\n                //     lables: ['Infected', 'Recovered', 'Deaths'],\n                //     datasets: [{\n                //         label: 'people',\n                //         backgroundColor: [\n                //             'rgba(0,0,255,0.5)',\n                //             'rgba(0, 255, 0, 0.664)',\n                //             'rgba(255, 0, 0, 0.692)'\n                //         ],\n                //         data: [confirmed.value, recovered.value, deaths.value],\n                        \n                //     }]\n\n                // }}\n                // options={{\n                //     legend: {display: false},\n                //     title: {display: true, text: `Current state in ${country}`}\n                // }}\n            /> \n        ): null\n    )\n\n    return(\n        <div className={styles.container}>\n            {country? barchar : linechart}\n           \n           \n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}